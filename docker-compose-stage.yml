services:
  db:
    image: postgres
    container_name: db
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: default_database
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - 5432
    restart: always

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - minio_data:/data
    expose:
      - 9000
      - 9001
    ports:
      - "9000:9000"   # API endpoint
      - "9001:9001"   # Web UI
    restart: always

  backend:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/django/Dockerfile
    container_name: backend
    volumes:
      - ./core:/usr/src/app
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media
    working_dir: /usr/src/app
    command: >
      sh -c "
        python manage.py collectstatic --noinput &&
        gunicorn core.wsgi:application --bind 0.0.0.0:8000
      "
    environment:
      PG_USER: username
      PG_PASSWORD: password
      PG_NAME: default_database
      PG_HOST: db
      PG_PORT: 5432
      DEBUG: True

      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET_NAME: mybucket
      MINIO_ENDPOINT: http://minio:9000
    expose:
      - 8000
    depends_on:
      - db
      - minio
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media
    depends_on:
      - backend
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:
  minio_data:
